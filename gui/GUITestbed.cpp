// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "GUITestbed.h"
#include "GUITabboz.h"
#include "../zarrosim.h"
#include "../global.h"
#include "../eventi.h"
#include "../sound.h"
#include "../sharedimg.h"
#include <FL/Fl_Shared_Image.H>
#include <FL/Fl_PNG_Image.H>
static int num_file; 
static int num_evento; 

Fl_Double_Window *win_testbed=(Fl_Double_Window *)0;

static void cb_Back(Fl_Return_Button*, void*) {
  win_principale->activate();
AggiornaPrincipale();
win_testbed->hide();
}

Fl_Box *box_1=(Fl_Box *)0;

Fl_Box *box_2=(Fl_Box *)0;

Fl_Box *box_3=(Fl_Box *)0;

static void cb_caricapics(Fl_Button*, void*) {
  //Fl_PNG_Image("provatesta",testa_0,413);
//Fl_PNG_Image("provagiacca",giubbotto_0,sizeof(giubbotto_0));
//Fl_PNG_Image("metallaro",metallaro,18984);

//Fl_Shared_Image *sh_img = Fl_Shared_Image::get("res/pic/giubbotto_0.png");

box_1->image(ImgGiubbotto[1]);
box_2->image(ImgGiubbotto[2]);
box_3->image(ImgScarpe[0]);
box_1->label(NULL);
box_1->redraw();
//but_essenza->image(sh_img);
win_testbed->redraw();
}

Fl_Button *but_essenza=(Fl_Button *)0;

Fl_Button *but_essenza2=(Fl_Button *)0;

Fl_Button *but_essenza3=(Fl_Button *)0;

static void cb_nro(Fl_Value_Input* o, void*) {
  num_file=o->value();
}

static void cb_Play(Fl_Button*, void*) {
  TabbozPlaySound(num_file);
}

static void cb_Evento(Fl_Value_Input* o, void*) {
  num_evento=o->value();
}

static void cb_RunH(Fl_Button*, void*) {
  FinestraEvento(num_evento,num_evento,"",FALSE);
}

static void cb_RunV(Fl_Button*, void*) {
  FinestraEvento(num_evento,num_evento,"",TRUE);
}

static void cb_Tema(Fl_Button*, void*) {
  Fl::scheme("base");
win_testbed->redraw();
}

static void cb_Tema1(Fl_Button*, void*) {
  Fl::scheme("plastic");
win_testbed->redraw();
}

static void cb_Tema2(Fl_Button*, void*) {
  Fl::scheme("gtk+");
win_testbed->redraw();
}

static void cb_Tema3(Fl_Button*, void*) {
  Fl::scheme("gleam");
win_testbed->redraw();
}

Fl_Double_Window* GUITestbed() {
  { win_testbed = new Fl_Double_Window(836, 656, "TestBed");
    win_testbed->color(FL_LIGHT3);
    win_testbed->hotspot(win_testbed);
    { Fl_Return_Button* o = new Fl_Return_Button(765, 590, 60, 50, "Back");
      o->callback((Fl_Callback*)cb_Back);
    } // Fl_Return_Button* o
    { box_1 = new Fl_Box(10, 10, 455, 570, "box_1");
      box_1->box(FL_ENGRAVED_FRAME);
      box_1->labelsize(16);
      box_1->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
    } // Fl_Box* box_1
    { box_2 = new Fl_Box(470, 10, 350, 260, "box_2");
      box_2->box(FL_ENGRAVED_FRAME);
      box_2->labelsize(16);
      box_2->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
    } // Fl_Box* box_2
    { box_3 = new Fl_Box(470, 275, 350, 305, "box_3");
      box_3->box(FL_ENGRAVED_FRAME);
      box_3->labelsize(16);
      box_3->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
    } // Fl_Box* box_3
    { Fl_Button* o = new Fl_Button(35, 255, 100, 30, "caricapics");
      o->callback((Fl_Callback*)cb_caricapics);
    } // Fl_Button* o
    { Fl_Group* o = new Fl_Group(85, 100, 620, 125);
      { but_essenza = new Fl_Button(85, 100, 190, 125);
        but_essenza->type(102);
        but_essenza->down_box(FL_DOWN_BOX);
        but_essenza->color(FL_BACKGROUND2_COLOR);
        but_essenza->selection_color((Fl_Color)3);
      } // Fl_Button* but_essenza
      { but_essenza2 = new Fl_Button(315, 100, 190, 125);
        but_essenza2->type(102);
        but_essenza2->down_box(FL_DOWN_BOX);
        but_essenza2->color(FL_BACKGROUND2_COLOR);
      } // Fl_Button* but_essenza2
      { but_essenza3 = new Fl_Button(515, 100, 190, 125);
        but_essenza3->type(102);
        but_essenza3->down_box(FL_DOWN_BOX);
        but_essenza3->color(FL_BACKGROUND2_COLOR);
      } // Fl_Button* but_essenza3
      o->end();
    } // Fl_Group* o
    { Fl_Value_Input* o = new Fl_Value_Input(105, 595, 70, 25, "nro file suono");
      o->callback((Fl_Callback*)cb_nro);
    } // Fl_Value_Input* o
    { Fl_Button* o = new Fl_Button(180, 600, 64, 20, "Play");
      o->callback((Fl_Callback*)cb_Play);
    } // Fl_Button* o
    { Fl_Value_Input* o = new Fl_Value_Input(445, 595, 70, 25, "Evento");
      o->callback((Fl_Callback*)cb_Evento);
    } // Fl_Value_Input* o
    { Fl_Button* o = new Fl_Button(520, 600, 64, 20, "RunH");
      o->callback((Fl_Callback*)cb_RunH);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(520, 620, 64, 20, "RunV");
      o->callback((Fl_Callback*)cb_RunV);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(65, 395, 95, 20, "Tema Win");
      o->callback((Fl_Callback*)cb_Tema);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(65, 475, 95, 20, "Tema Plastic");
      o->callback((Fl_Callback*)cb_Tema1);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(65, 445, 95, 20, "Tema GTK");
      o->callback((Fl_Callback*)cb_Tema2);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(65, 420, 95, 20, "Tema Gleam");
      o->callback((Fl_Callback*)cb_Tema3);
    } // Fl_Button* o
    num_file=0;
    win_testbed->set_modal();
    win_testbed->size_range(836, 656, 836, 656);
    win_testbed->end();
  } // Fl_Double_Window* win_testbed
  return win_testbed;
}
